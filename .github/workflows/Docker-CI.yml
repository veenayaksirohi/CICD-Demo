name: Docker-CI

on:
  push:
    branches:
      - main

env:
  IMAGE_TEST:    ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:test-${{ github.sha }}
  IMAGE_RUNTIME: ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Authenticate to push :contentReference[oaicite:0]{index=0}

      - name: Build & push TEST image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          target: test
          push: true
          tags: ${{ env.IMAGE_TEST }}        # Builds the “test” stage and pushes :contentReference[oaicite:1]{index=1}

      - name: Build & push RUNTIME image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          target: runtime
          push: true
          tags: ${{ env.IMAGE_RUNTIME }}      # Builds the “runtime” stage and pushes :contentReference[oaicite:2]{index=2}

  test:
    needs: build-and-push                      # Ensures build-and-push completes first :contentReference[oaicite:3]{index=3}
    runs-on: ubuntu-latest
    steps:
      - name: Pull & execute TEST image
        run: |
          docker pull ${{ env.IMAGE_TEST }}
          docker run --rm ${{ env.IMAGE_TEST }}    # Runs CMD: start Flask, sleep, pytest :contentReference[oaicite:4]{index=4}
